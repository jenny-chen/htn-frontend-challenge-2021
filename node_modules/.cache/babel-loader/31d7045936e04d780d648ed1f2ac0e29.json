{"ast":null,"code":"var _jsxFileName = \"/Users/jennychen/htn-frontend-challenge-2021/my-app/src/components/event.js\";\nimport styled, { css } from 'styled-components';\nimport { Anchor, EventBox, EventTitle, Text } from './basics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Event(props) {\n  if (props.activeEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(EventBox, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: \"Whoops, it looks like there are no matching events.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  } else {\n    groupedByDateEvents[day].map((event, j) => {\n      var start = new Date(event.start_time);\n      var end = new Date(event.end_time);\n      var startTime = start.toLocaleString(\"en-CA\", {\n        hour: 'numeric',\n        minute: '2-digit'\n      });\n      var endTime = end.toLocaleString(\"en-CA\", {\n        hour: 'numeric',\n        minute: '2-digit'\n      });\n      var longDate = new Date(event.start_time).toLocaleString(\"en-CA\", {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      });\n      var dateText;\n\n      if (currentDate !== start.getDate()) {\n        currentDate = start.getDate();\n        dateText = start.toLocaleString(\"en-CA\", {\n          weekday: 'long',\n          month: 'long',\n          day: 'numeric'\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(EventBox, {\n        id: event.id,\n        first: j === 0 ? true : false,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: e => handleEventClick(e, event.id),\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            type: event.event_type,\n            children: getEventType(event.event_type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EventTitle, {\n            type: event.event_type,\n            children: event.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: longDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [startTime, \" - \", endTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), expandedEvents.includes(event.id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [event.speakers.length > 0 && /*#__PURE__*/_jsxDEV(Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Speakers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), event.speakers.map((speaker, k) => {\n              var name = speaker.name;\n\n              if (k === 0) {\n                name = \" \" + speaker.name;\n              } else {\n                name = \", \" + speaker.name;\n              }\n\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [speaker.profile_pic && /*#__PURE__*/_jsxDEV(Image, {\n                  src: speaker.profile_pic,\n                  alt: \"profile picture of \" + speaker.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 47\n                }, this), name]\n              }, void 0, true);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), event.related_events.length > 0 && /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: \"Related Events:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 49\n          }, this), event.related_events.map((relatedEventId, j) => {\n            var targetEvent = events.find(eve => {\n              return eve.id === relatedEventId;\n            });\n\n            if (!loggedIn && targetEvent.permission === \"private\") {\n              return;\n            } else {\n              return /*#__PURE__*/_jsxDEV(Anchor, {\n                href: \"#\" + relatedEventId,\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  children: targetEvent.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this);\n            }\n          })]\n        }, void 0, true)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    });\n  }\n}\n\n_c = Event;\nexport default Event;\n\nvar _c;\n\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"sources":["/Users/jennychen/htn-frontend-challenge-2021/my-app/src/components/event.js"],"names":["styled","css","Anchor","EventBox","EventTitle","Text","Event","props","activeEvents","length","groupedByDateEvents","day","map","event","j","start","Date","start_time","end","end_time","startTime","toLocaleString","hour","minute","endTime","longDate","weekday","month","dateText","currentDate","getDate","id","e","handleEventClick","event_type","getEventType","name","expandedEvents","includes","speakers","speaker","k","profile_pic","description","related_events","relatedEventId","targetEvent","events","find","eve","loggedIn","permission"],"mappings":"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","sourcesContent":["import styled, { css } from 'styled-components'\nimport {\n  Anchor,\n  EventBox,\n  EventTitle,\n  Text,\n} from './basics'\n\nfunction Event(props) {\n  if (props.activeEvents.length === 0) {\n    return (\n      <EventBox>\n        <Text>Whoops, it looks like there are no matching events.</Text>\n      </EventBox>\n    )\n  } else {\n    groupedByDateEvents[day].map((event, j) => {\n      var start = new Date(event.start_time);\n      var end = new Date(event.end_time);\n      var startTime = start.toLocaleString(\"en-CA\", {hour: 'numeric', minute: '2-digit'});\n      var endTime = end.toLocaleString(\"en-CA\", {hour: 'numeric', minute: '2-digit'});\n      var longDate = (new Date(event.start_time)).toLocaleString(\"en-CA\", {weekday: 'long', month: 'long', day: 'numeric'});\n      var dateText;\n      if (currentDate !== start.getDate()) {\n        currentDate = start.getDate();\n        dateText = start.toLocaleString(\"en-CA\", {weekday: 'long', month: 'long', day: 'numeric'});\n      }\n      return (\n        <EventBox id={event.id} key={event.id} first={j === 0 ? true : false}>\n          <a onClick={ (e) => handleEventClick(e, event.id) }>\n            <Text type={event.event_type}>{getEventType(event.event_type)}</Text>\n            <EventTitle type={event.event_type}>{event.name}</EventTitle>\n            <Text bold>{longDate}</Text>\n            <Text>{startTime} - {endTime}</Text>\n          </a>\n        {(expandedEvents.includes(event.id)) &&\n          <>\n            {event.speakers.length > 0 &&\n              <Text><strong>Speakers:</strong>\n                {event.speakers.map((speaker, k) => {\n                  var name = speaker.name;\n                  if (k === 0) {\n                    name = \" \"+speaker.name;\n                  } else {\n                    name = \", \"+speaker.name\n                  }\n                  return (\n                    <>\n                      {speaker.profile_pic && <Image src={speaker.profile_pic} alt={\"profile picture of \"+speaker.name} />}\n                      {name}\n                    </>\n                  )\n                })}\n              </Text>\n            }\n            <Text>{event.description}</Text>\n            {event.related_events.length > 0 && <Text bold>Related Events:</Text>}\n            {event.related_events.map((relatedEventId, j) => {\n              var targetEvent = (events.find(eve => {\n                return eve.id === relatedEventId\n              }))\n              if (!loggedIn && targetEvent.permission === \"private\") {\n                return\n              } else {\n                return (\n                  <Anchor href={\"#\"+relatedEventId}>\n                    <Text>{targetEvent.name}</Text>\n                  </Anchor>\n                )\n              }\n            })}\n          </>}\n        </EventBox>\n      )\n    })\n  }\n}\n\nexport default Event\n"]},"metadata":{},"sourceType":"module"}