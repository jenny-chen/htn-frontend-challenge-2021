{"ast":null,"code":"var _jsxFileName = \"/Users/jennychen/htn-frontend-challenge-2021/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventBox = styled.div`\n  margin-left: 20%;\n`;\n_c = EventBox;\nconst EventTitle = styled.h2`\n  color: white;\n`;\n_c2 = EventTitle;\nconst TimeText = styled.p`\n  color: white;\n`;\n_c3 = TimeText;\n\nfunction App() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [date, setDate] = useState(-1);\n  useEffect(() => {\n    async function fetchEvents() {\n      fetch('https://api.hackthenorth.com/v3/graphql?query={ events { id name event_type permission start_time end_time description speakers { name profile_pic } public_url private_url related_events } }').then(response => response.json()).then(data => {\n        console.log(data);\n        console.log(data.data.events); // sort by start_time\n\n        setEvents(data.data.events.sort((a, b) => a.start_time - b.start_time));\n      });\n    }\n\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: events.map((event, i) => {\n          var start = new Date(event.start_time);\n          var end = new Date(event.end_time);\n          console.log(\"month:\", start.getMonth());\n          console.log(\"date:\", start.getDate());\n          var dateText;\n\n          if (date == start.getDate()) {\n            dateText = start.getDate();\n          } else {\n            date = start.getDate();\n          }\n\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(EventBox, {\n              children: [/*#__PURE__*/_jsxDEV(EventTitle, {\n                children: event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TimeText, {\n                children: start.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TimeText, {\n                children: end.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8NyEFkaDcV2FaDLvEV66+VuiVUU=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EventBox\");\n$RefreshReg$(_c2, \"EventTitle\");\n$RefreshReg$(_c3, \"TimeText\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/jennychen/htn-frontend-challenge-2021/my-app/src/App.js"],"names":["React","useState","useEffect","styled","EventBox","div","EventTitle","h2","TimeText","p","App","events","setEvents","date","setDate","fetchEvents","fetch","then","response","json","data","console","log","sort","a","b","start_time","logo","map","event","i","start","Date","end","end_time","getMonth","getDate","dateText","name","toString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst EventBox = styled.div`\n  margin-left: 20%;\n`\nconst EventTitle = styled.h2`\n  color: white;\n`\n\nconst TimeText = styled.p`\n  color: white;\n`\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [date, setDate] = useState(-1);\n\n  useEffect(() => {\n    async function fetchEvents() {\n      fetch('https://api.hackthenorth.com/v3/graphql?query={ events { id name event_type permission start_time end_time description speakers { name profile_pic } public_url private_url related_events } }')\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          console.log(data.data.events)\n          // sort by start_time\n          setEvents(data.data.events.sort((a, b) => (a.start_time - b.start_time)))\n        });\n    }\n\n    fetchEvents();\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          {events.map((event, i) => {\n            var start = new Date(event.start_time);\n            var end = new Date(event.end_time);\n            console.log(\"month:\", start.getMonth())\n            console.log(\"date:\", start.getDate())\n            var dateText;\n            if (date == start.getDate()) {\n              dateText = start.getDate();\n            } else {\n              date = start.getDate()\n            }\n            return (\n              <>\n\n                <EventBox key={i}>\n                  <EventTitle>{event.name}</EventTitle>\n                  <TimeText>{start.toString()}</TimeText>\n                  <TimeText>{end.toString()}</TimeText>\n                </EventBox>\n              </>\n            )\n          })}\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}